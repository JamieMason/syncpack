"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8714],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7029:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294);const a={pill:"pill_lx6J",gray:"gray_oDNb",red:"red_TkSj",yellow:"yellow_uZjQ",green:"green_VuIk",blue:"blue_niGL",indigo:"indigo_t1co",purple:"purple_wWQZ",pink:"pink_hjd3"};function i(e){let{required:t,optional:n}=e;return r.createElement("p",null,t&&r.createElement("span",{className:`${a.pill} ${a.red}`},"Required"),n&&r.createElement("span",{className:`${a.pill} ${a.gray}`},"Optional"))}},4066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),i=n(7029);const o={id:"sort-az",title:"sortAz"},s="sortAz string[]",l={unversionedId:"config/sort-az",id:"config/sort-az",title:"sortAz",description:"When using the format command, determines which fields within package.json files should be sorted",source:"@site/docs/config/sort-az.mdx",sourceDirName:"config",slug:"/config/sort-az",permalink:"/syncpack/config/sort-az",draft:!1,editUrl:"https://github.com/JamieMason/syncpack/tree/master/site/docs/config/sort-az.mdx",tags:[],version:"current",lastUpdatedBy:"Jamie Mason",lastUpdatedAt:1687896942,formattedLastUpdatedAt:"Jun 27, 2023",frontMatter:{id:"sort-az",title:"sortAz"},sidebar:"docs",previous:{title:"semverRange",permalink:"/syncpack/config/semver-range"},next:{title:"sortFirst",permalink:"/syncpack/config/sort-first"}},c={},p=[{value:"Default Value",id:"default-value",level:2}],u={toc:p},d="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sortaz-string"},(0,a.kt)("inlineCode",{parentName:"h1"},"sortAz")," string[]"),(0,a.kt)(i.Z,{optional:!0,mdxType:"Pills"}),(0,a.kt)("p",null,"When using the ",(0,a.kt)("inlineCode",{parentName:"p"},"format")," command, determines which fields within package.json files should be sorted\nalphabetically. When the value is an Object, its keys are sorted alphabetically. When the value is\nan Array, its values are sorted alphabetically. There is no equivalent CLI Option for this\nconfiguration."),(0,a.kt)("h2",{id:"default-value"},"Default Value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".syncpackrc"',title:'".syncpackrc"'},'{\n  "sortAz": [\n    "contributors",\n    "dependencies",\n    "devDependencies",\n    "keywords",\n    "peerDependencies",\n    "resolutions",\n    "scripts"\n  ]\n}\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Syncpack config files also support\n",(0,a.kt)("a",{parentName:"p",href:"https://jamiemason.github.io/syncpack/config-file#typescript-intellisense"},"TypeScript IntelliSense"),".")))}f.isMDXComponent=!0}}]);