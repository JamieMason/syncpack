"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[746],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=s,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,o(o({ref:n},l),{},{components:t})):r.createElement(f,o({ref:n},l))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2475:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=t(7462),s=(t(7294),t(3905));const a={id:"set-semver-ranges",title:"set-semver-ranges"},o=void 0,i={unversionedId:"set-semver-ranges",id:"set-semver-ranges",title:"set-semver-ranges",description:'Ensure dependency versions used within "dependencies", "devDependencies" etc',source:"@site/docs/set-semver-ranges.mdx",sourceDirName:".",slug:"/set-semver-ranges",permalink:"/syncpack/set-semver-ranges",draft:!1,editUrl:"https://github.com/JamieMason/syncpack/tree/master/site/docs/set-semver-ranges.mdx",tags:[],version:"current",lastUpdatedBy:"Jamie Mason",lastUpdatedAt:1685388442,formattedLastUpdatedAt:"May 29, 2023",frontMatter:{id:"set-semver-ranges",title:"set-semver-ranges"},sidebar:"docs",previous:{title:"list",permalink:"/syncpack/list"},next:{title:"--config",permalink:"/syncpack/option/config"}},p={},c=[{value:"CLI Options",id:"cli-options",level:2},{value:"Examples",id:"examples",level:2}],l={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,s.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Ensure dependency versions used within ",(0,s.kt)("inlineCode",{parentName:"p"},'"dependencies"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"devDependencies"')," etc\nfollow a consistent format."),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"/syncpack/config/semver-groups"},(0,s.kt)("inlineCode",{parentName:"a"},"semverGroups"))," if you have advanced\nrequirements."),(0,s.kt)("h2",{id:"cli-options"},"CLI Options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'-s, --source [pattern]      glob pattern for package.json files to read from\n-f, --filter [pattern]      only include dependencies whose name matches this regex\n-c, --config <path>         path to a syncpack config file\n-r, --semver-range <range>  see supported ranges below. defaults to ""\n-t, --types <names>         only include dependencies matching these types (eg. types=dev,prod,myCustomType)\n-i, --indent [value]        override indentation. defaults to "  "\n-h, --help                  display help for command\n')),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# uses defaults for resolving packages\nsyncpack set-semver-ranges\n# uses packages defined by --source when provided\nsyncpack set-semver-ranges --source "apps/*/package.json"\n# multiple globs can be provided like this\nsyncpack set-semver-ranges --source "apps/*/package.json" --source "core/*/package.json"\n# uses dependencies regular expression defined by --filter when provided\nsyncpack set-semver-ranges --filter "typescript|tslint"\n# use ~ range instead of default ""\nsyncpack set-semver-ranges --semver-range ~\n# set ~ range in "devDependencies"\nsyncpack set-semver-ranges --types dev --semver-range ~\n# set ~ range in "devDependencies" and "peerDependencies"\nsyncpack set-semver-ranges --types dev,peer --semver-range ~\n# indent package.json with 4 spaces instead of 2\nsyncpack set-semver-ranges --indent "    "\n')))}u.isMDXComponent=!0}}]);