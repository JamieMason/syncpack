"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9260],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,p=function(e,t){if(null==e)return{};var n,r,p={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,p=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=i(n),u=p,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function f(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:p,a[1]=s;for(var i=2;i<o;i++)a[i]=n[i];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var r=n(7462),p=(n(7294),n(3905));const o={id:"prompt",title:"prompt"},a=void 0,s={unversionedId:"prompt",id:"prompt",title:"prompt",description:"Displays a series of prompts to fix mismatches which syncpack cannot fix automatically.",source:"@site/docs/prompt.mdx",sourceDirName:".",slug:"/prompt",permalink:"/syncpack/prompt",draft:!1,editUrl:"https://github.com/JamieMason/syncpack/tree/master/site/docs/prompt.mdx",tags:[],version:"current",lastUpdatedBy:"Jamie Mason",lastUpdatedAt:1687876466,formattedLastUpdatedAt:"Jun 27, 2023",frontMatter:{id:"prompt",title:"prompt"},sidebar:"docs",previous:{title:"list",permalink:"/syncpack/list"},next:{title:"set-semver-ranges",permalink:"/syncpack/set-semver-ranges"}},c={},i=[{value:"CLI Options",id:"cli-options",level:2},{value:"Examples",id:"examples",level:2}],l={toc:i},m="wrapper";function d(e){let{components:t,...n}=e;return(0,p.kt)(m,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Displays a series of prompts to fix mismatches which syncpack cannot fix automatically."),(0,p.kt)("h2",{id:"cli-options"},"CLI Options"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"-s, --source [pattern]  glob pattern for package.json files to read from\n-f, --filter [pattern]  only include dependencies whose name matches this regex\n-c, --config <path>     path to a syncpack config file\n-t, --types <names>     only include dependencies matching these types (eg. types=dev,prod,myCustomType)\n-h, --help              display help for command\n")),(0,p.kt)("h2",{id:"examples"},"Examples"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},'# uses defaults for resolving packages\nsyncpack prompt\n# uses packages defined by --source when provided\nsyncpack prompt --source "apps/*/package.json"\n# multiple globs can be provided like this\nsyncpack prompt --source "apps/*/package.json" --source "core/*/package.json"\n# uses dependencies regular expression defined by --filter when provided\nsyncpack prompt --filter "typescript|tslint"\n# only inspect "devDependencies"\nsyncpack prompt --types dev\n# only inspect "devDependencies" and "peerDependencies"\nsyncpack prompt --types dev,peer\n')))}d.isMDXComponent=!0}}]);