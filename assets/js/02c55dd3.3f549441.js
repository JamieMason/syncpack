"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[961],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7029:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(7294);const a={pill:"pill_lx6J",gray:"gray_oDNb",red:"red_TkSj",yellow:"yellow_uZjQ",green:"green_VuIk",blue:"blue_niGL",indigo:"indigo_t1co",purple:"purple_wWQZ",pink:"pink_hjd3"};function o(e){let{required:n,optional:t}=e;return r.createElement("p",null,n&&r.createElement("span",{className:`${a.pill} ${a.red}`},"Required"),t&&r.createElement("span",{className:`${a.pill} ${a.gray}`},"Optional"))}},1991:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=t(7462),a=(t(7294),t(3905)),o=t(7029);const i={id:"semver-range",title:"semverRange"},s="semverRange string",p={unversionedId:"config/semver-range",id:"config/semver-range",title:"semverRange",description:"The semver range to be used consistently throughout your monorepo.",source:"@site/docs/config/semver-range.mdx",sourceDirName:"config",slug:"/config/semver-range",permalink:"/syncpack/config/semver-range",draft:!1,editUrl:"https://github.com/JamieMason/syncpack/tree/master/site/docs/config/semver-range.mdx",tags:[],version:"current",lastUpdatedBy:"Jamie Mason",lastUpdatedAt:1682267033,formattedLastUpdatedAt:"Apr 23, 2023",frontMatter:{id:"semver-range",title:"semverRange"},sidebar:"docs",previous:{title:"semverGroups",permalink:"/syncpack/config/semver-groups"},next:{title:"sortAz",permalink:"/syncpack/config/sort-az"}},l={},c=[{value:"Default Value",id:"default-value",level:2},{value:"Supported Ranges",id:"supported-ranges",level:2}],u={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"semverrange-string"},(0,a.kt)("inlineCode",{parentName:"h1"},"semverRange")," string"),(0,a.kt)(o.Z,{optional:!0,mdxType:"Pills"}),(0,a.kt)("p",null,"The semver range to be used consistently throughout your monorepo."),(0,a.kt)("h2",{id:"default-value"},"Default Value"),(0,a.kt)("p",null,"Defaulted to ",(0,a.kt)("inlineCode",{parentName:"p"},'""')," to ensure that exact dependency versions are used instead of\nloose ranges."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "semverRange": ""\n}\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If you want to use different ranges in different packages and/or types of\ndependencies, you can use ",(0,a.kt)("a",{parentName:"p",href:"/syncpack/config/semver-groups"},(0,a.kt)("inlineCode",{parentName:"a"},"semverGroups"))," to partition\nyour repo into different sets of rules.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"semverRange")," configuration in your ",(0,a.kt)("a",{parentName:"p",href:"/syncpack/config-file"},"config file")," can be\noverridden on an ad hoc basis using the\n",(0,a.kt)("a",{parentName:"p",href:"/syncpack/option/semver-range"},(0,a.kt)("inlineCode",{parentName:"a"},"--semver-range"))," option.")),(0,a.kt)("h2",{id:"supported-ranges"},"Supported Ranges"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'<  <1.4.2\n<= <=1.4.2\n"" 1.4.2\n~  ~1.4.2\n^  ^1.4.2\n>= >=1.4.2\n>  >1.4.2\n*  *\n')))}d.isMDXComponent=!0}}]);