// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixMismatches when dependencies are installed with different versions replaces non-semver dependencies with valid semver dependencies 1`] = `
Array [
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/a/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"link:vendor/foo-0.1.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/b/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"link:vendor/foo-0.2.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/c/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"0.3.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/d/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"0.2.0\\"
  }
}
",
  },
]
`;

exports[`fixMismatches when dependencies are installed with different versions when the dependency is a package maintained in this workspace uses the workspace version 1`] = `
Array [
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.0.1",
      },
    },
    "filePath": "/a/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"0.1.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "devDependencies": Object {
        "foo": "0.0.1",
      },
    },
    "filePath": "/b/package.json",
    "json": "{
  \\"devDependencies\\": {
    \\"foo\\": \\"0.2.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "name": "foo",
      "version": "0.0.1",
    },
    "filePath": "/foo/package.json",
    "json": "{
  \\"name\\": \\"foo\\",
  \\"version\\": \\"0.0.1\\"
}
",
  },
]
`;

exports[`fixMismatches when dependencies are installed with different versions when the dependency is not a package maintained in this workspace uses the highest version 1`] = `
Array [
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.2.0",
      },
    },
    "filePath": "/a/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"0.1.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "devDependencies": Object {
        "foo": "0.2.0",
      },
    },
    "filePath": "/b/package.json",
    "json": "{
  \\"devDependencies\\": {
    \\"foo\\": \\"0.2.0\\"
  }
}
",
  },
]
`;

exports[`fixMismatches when dependencies are installed with different versions when the dependency is not a package maintained in this workspace when strict overrides are provided uses the version from the versionOverrides map 1`] = `
Array [
  Object {
    "contents": Object {
      "dependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/a/package.json",
    "json": "{
  \\"dependencies\\": {
    \\"foo\\": \\"0.1.0\\"
  }
}
",
  },
  Object {
    "contents": Object {
      "devDependencies": Object {
        "foo": "0.3.0",
      },
    },
    "filePath": "/b/package.json",
    "json": "{
  \\"devDependencies\\": {
    \\"foo\\": \\"0.2.0\\"
  }
}
",
  },
]
`;
